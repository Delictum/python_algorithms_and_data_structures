"""
Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами на промежутке
[-100; 100). Выведите на экран исходный и отсортированный массивы.
Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
"""

import random


size = 10
# "одномерный целочисленный массив, заданный случайными числами на промежутке [-100; 100)" - т.е. [-100; 99].
# Не знаю, важно ли это. randint включает последнее число, в отличии от range и большинства прочих функций
mas = [random.randint(-100, 99) for i in range(size)]


def sorted_bubble(array):
    is_sorted = False  # Благодаря вводу этой дополнительной переменной цикл while может отработать за меньше проходов
    n = 0  # Количество проходов
    while not is_sorted:
        is_sorted = True
        for i in range(1, len(array)):
            if array[i] > array[i - 1]:
                array[i], array[i - 1] = array[i - 1], array[i]
                is_sorted = False
        n += 1
    print(f'While отработал {n} раз.')
    return array


print(f'Исходный список: {mas}')
print(f'Отсортированный список по убыванию: {sorted_bubble(mas.copy())}')
